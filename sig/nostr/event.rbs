module Nostr
  class Event
    attr_reader pubkey: PublicKey
    attr_reader created_at: Integer
    attr_reader kind: Integer
    attr_reader tags: Array[Array[String]]
    attr_reader content: String
    attr_accessor id: String?
    attr_accessor sig: Signature?

    def initialize: (
      pubkey: PublicKey,
      kind: Integer,
      content: String,
      ?created_at: Integer,
      ?tags: Array[Array[String]],
      ?id: String?,
      ?sig: Signature?
    ) -> void

    def serialize: -> [Integer, String, Integer, Integer, Array[Array[String]], String]

    def to_h: -> {
      id: String?,
      pubkey: String,
      created_at: Integer,
      kind: Integer,
      tags: Array[Array[String]],
      content: String,
      sig: String?
    }
    def ==: (Event other) -> bool

    def sign:(PrivateKey) -> Event
    def verify_signature: -> bool

    def add_event_reference: (String) -> Array[Array[String]]
    def add_pubkey_reference: (PublicKey) -> Array[Array[String]]
  end
end
